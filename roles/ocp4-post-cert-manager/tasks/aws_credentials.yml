---
- name: 'Create aws credentials'
  k8s:
    kubeconfig: "{{ kubeconfig }}"
    state: present
    definition: "{{ lookup('file', item ) | from_yaml }}"
  loop:
  - ./files/cert_aws_key_new.yml

- pause:
    seconds: 10

- name: get keys from certmanager-aws
  k8s_info:
    kubeconfig: "{{ kubeconfig }}"
    kind: secret
    name: certmanager-aws-key
    namespace: openshift-ingress
  register: aws_credentials

- name: '{{ cmanager_label }} Set facts aws_access_key_id '
  set_fact:
    aws_access_key_id: "{{ aws_credentials.resources.0.data.aws_access_key_id | b64decode }}"
    aws_secret_access_key: "{{ aws_credentials.resources.0.data.aws_secret_access_key | b64decode }}"

- name: '{{ cmanager_label }} get hosted zones'
  route53_info:
    aws_access_key: "{{ aws_access_key_id }}"
    aws_secret_key: "{{ aws_secret_access_key }}"
    query: hosted_zone
  register: hosted_zones

- name: '{{ cmanager_label }} set name_zone'
  set_fact:
    name_zone: "{{ ocp4_dnszone }}." 
    base_zone: "{{ ocp4_base_domain }}." 

- debug: 
    msg: "{{ name_zone }}  {{ base_zone }}"

- name: '{{ cmanager_label }} get hosted zones'
  set_fact:
    host_zone_id: '{{ item.Id }}'
  loop: "{{ hosted_zones.HostedZones }}"
  when: ( item.Name == name_zone or item.Name== base_zone) and (not item.Config.PrivateZone | bool())

- debug:
    msg: '{{ host_zone_id }}'

