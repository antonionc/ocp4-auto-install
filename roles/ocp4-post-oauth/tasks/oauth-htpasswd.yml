---

- name: '[OCP4-POST-OAUTH] Generate htpasswd hash for ocp4_idm_htpasswd_user_password'
  shell: >-
    htpasswd -nb "userN" "{{ ocp4_idm_htpasswd_user_password }}"|cut -d: -f2
  register: htpasswd_line
  when:
  - ocp4_idm_htpasswd_user_password is defined
  - ocp4_idm_htpasswd_user_password_hash is not defined

- name: '[OCP4-POST-OAUTH] Set fact ocp4_idm_htpasswd_user_password_hash'
  set_fact:
    ocp4_idm_htpasswd_user_password_hash: "{{ htpasswd_line.stdout }}"
  when:
  - ocp4_idm_htpasswd_user_password is defined
  - ocp4_idm_htpasswd_user_password_hash is not defined
  - htpasswd_line is succeeded

- name: '[OCP4-POST-OAUTH] Generate htpasswd hash for ocp4_idm_admin_user'
  shell: >-
    htpasswd -nb "admin" "{{ ocp4_idm_htpasswd_admin_password }}"|cut -d: -f2
  register: htpasswd_line
  when:
  - ocp4_idm_htpasswd_admin_password is defined
  - ocp4_idm_htpasswd_admin_password_hash is not defined

- name: '[OCP4-POST-OAUTH] Set fact ocp4_idm_htpasswd_admin_password_hash'
  set_fact:
    ocp4_idm_htpasswd_admin_password_hash: "{{ htpasswd_line.stdout }}"
  when:
  - ocp4_idm_htpasswd_admin_password is defined
  - ocp4_idm_htpasswd_admin_password_hash is not defined
  - htpasswd_line is succeeded

# TODO: '[OCP4-POST-OAUTH] locate better the htpasswd
- name: '[OCP4-POST-OAUTH] Generate htpasswd file'
  template:
    src: "htpasswd.j2"
    dest: "{{ user_path }}/users.htpasswd"
    #owner: "{{ ansible_user }}"
    mode: 0664

- name: '[OCP4-POST-OAUTH] Ensure htpasswd Secret is absent'
  k8s:
    kubeconfig: "{{ user_path }}/auth/kubeconfig"
    state: absent
    api_version: v1
    kind: Secret
    name: htpasswd-secret
    namespace: openshift-config

- name: '[OCP4-POST-OAUTH] Create htpasswd secret from htpasswd file'
  shell: "{{ container_dir }}/tools/oc create secret generic htpasswd-secret -n openshift-config --from-file=htpasswd={{ user_path }}/users.htpasswd"
  environment:
    KUBECONFIG: "{{ user_path }}/auth/kubeconfig"

- name: '[OCP4-POST-OAUTH] Update OAuth Configuration'
  k8s:
    kubeconfig: "{{ user_path }}/auth/kubeconfig"
    state: present
    merge_type:
    - strategic-merge
    - merge
    definition: "{{ lookup('file', item ) | from_yaml }}"
  loop:
  - ./files/oauth-htpasswd.yaml

- name: '[OCP4-POST-OAUTH] Create htpasswd secret from htpasswd file'
  shell: "{{ container_dir }}/tools/oc adm add-cluster-role-to-user cluster-admin {{ ocp4_idm_admin_user }}"
  environment:
    KUBECONFIG: "{{ user_path }}/auth/kubeconfig"

## TODO oc login first
#- name: '[OCP4-POST-OAUTH] Check that the user exists"
#  k8s_info:
#    kubeconfig: "{{ user_path }}/auth/kubeconfig"
#    api_version: user.openshift.io/v1
#    kind: User
#    name: "{{ ocp4_idm_admin_user }}"

- name: '[OCP4-POST-OAUTH] Print User Information'
  debug:
    msg: "{{ item }}"
  loop:
  - "user.info: HTPasswd Authentication is enabled on this cluster."
  - "user.info: {{ ocp4_idm_htpasswd_user_base }}1 .. {{ ocp4_idm_htpasswd_user_base }}{{ ocp4_idm_htpasswd_user_count }} are created."
  - "user.info: User `{{ ocp4_idm_admin_user }}` is a cluster-admin"

# More Info: https://docs.openshift.com/container-platform/4.3/authentication/identity_providers/configuring-basic-authentication-identity-provider.html
