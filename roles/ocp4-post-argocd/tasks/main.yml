---
# tasks file for ocp_argocd
- name: '[POSTINSTALL][ARGOCD] Ensure namespace exists'
  k8s:
    kubeconfig: "{{ kubeconfig }}"
    state: present
    api_version: v1
    kind: Namespace
    name: argocd

- name: '[POSTINSTALL][ARGOCD] Ensure directory exists'
  file:
    path: "{{ user_path }}/argocd"
    state: directory

- name: '[POSTINSTALL][ARGOCD] Download argocd install.yaml'
  get_url:
    url: https://raw.githubusercontent.com/argoproj/argo-cd/{{argocd_version}}/manifests/install.yaml
    dest: "{{ user_path}}/argocd/"
  register: argocd_download

- name: '[POSTINSTALL][ARGOCD] Download argocd client'
  get_url:
    url: https://github.com/argoproj/argo-cd/releases/download/{{argocd_version}}/argocd-linux-amd64
    dest: "{{ user_path}}/argocd/"
  register: argocd_client
  when: argoclient | bool

- name: '[POSTINSTALL][ARGOCD] Create Objects'
  k8s:
    kubeconfig: "{{ kubeconfig }}"
    state: present
    namespace: argocd
    src: "{{ argocd_download.dest }}"

- name: '[POSTINSTALL][ARGOCD] Create route for Argocd Server'
  k8s:
    kubeconfig: "{{ kubeconfig }}"
    state: present
    definition:
      apiVersion: v1
      kind: Route
      metadata:
        name: argocd-server
        namespace: argocd
      spec:
        to:
          kind: Service
          name: argocd-server
        tls:
          termination: passthrough
